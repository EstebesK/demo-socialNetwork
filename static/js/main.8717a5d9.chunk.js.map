{"version":3,"sources":["assets/social-network.png","Components/NavMenu/styles.js","api/api.js","Redux/auth-reducer.js","Components/NavMenu/NavMenu.js","Redux/profile-reducer.js","Components/Profile/ProfileInfo/styles.js","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","Components/Profile/ProfileInfo/ProfileData.js","Components/Profile/Profile.js","Components/Login/FormInput.js","Components/Login/styles.js","Components/Login/Login.js","Helpers/updateObjectInArray.js","Redux/users-reducer.js","Paginator/Paginator.js","Common/Preloader/Loader.js","Components/Users/User/styles.js","Components/Users/User/User.js","Components/Users/Users.js","Components/Profile/ProfileInfo/ProfileDataForm/styles.js","Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.js","App.js","reportWebVitals.js","Redux/redux-store.js","index.js"],"names":["makeStyles","theme","image","width","loginButton","marginRight","spacing","sideMenuButton","color","title","flexGrow","root","display","appBar","zIndex","drawer","flexShrink","drawerPaper","backgroundColor","drawerContainer","overflow","content","padding","axiosInstance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","email","password","rememberMe","profileAPI","status","put","SET_AUTH_USER_DATA","initialState","login","isAuth","setAuthUserData","type","payload","getAuthUserDataThunk","dispatch","a","resultCode","id","authReducer","state","action","connect","authPage","logout","classes","useStyles","CssBaseline","AppBar","position","className","Toolbar","src","logo","alt","Typography","variant","Button","onClick","component","Link","to","Drawer","paper","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","SET_USER_PROFILE","SET_USER_PROFILE_STATUS","profile","aboutMe","contacts","facebook","twitter","instagram","youtube","github","lookingForAJob","lookingForAJobDescription","fullName","photos","small","large","setUserProfileStatus","getUserProfile","profileReducer","mainPhoto","height","paperAbout","marginTop","ProfileStatus","isOwner","updateUserProfileStatus","useState","editMode","setEditMode","statusLocal","setStatus","useEffect","onDoubleClickCapture","TextField","defaultValue","onChange","e","currentTarget","value","onBlur","autoFocus","ProfileData","Grid","container","xs","Paper","elevation","item","Avatar","style","marginLeft","RouterLink","size","orientation","flexItem","pink","profilePage","authorizedUserId","getUserProfileStatus","useParams","FormInput","name","label","required","asProp","control","useFormContext","as","fullWidth","justifyContent","paddingRight","textAlign","palette","text","secondary","paddingTop","useForm","handleSubmit","methods","onSubmit","sm","gutterBottom","updateObjInArray","items","itemsId","objPropName","newObjProps","map","u","SET_USERS","SET_TOTAL_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","FOLLOW","UNFOLLOW","users","totalPages","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","togglefollowingInProgress","getUsers","totalCount","usersReducer","followed","totalPagesCount","Math","ceil","Pagination","count","page","event","pageNumber","Loader","alignItems","justify","minHeight","CircularProgress","margin","followButton","userLink","textDecoration","User","follow","unfollow","disabled","some","endIcon","usersPage","props","console","log","App","exact","path","Profile","Users","Login","ProfileDataForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8717a5d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/social-network.d7afdff8.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles((theme) => ({\r\n  image: {\r\n    width: '50px'\r\n  },\r\n  loginButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  sideMenuButton: {\r\n    color: 'white',\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: '#253053',\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n}))","import * as axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '98cfa117-d7dc-4c98-8d3a-ba1c8783e8b4'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    follow(userId) {\r\n        return axiosInstance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return axiosInstance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    login(email, password, rememberMe) {\r\n        return axiosInstance.post(`auth/login`, { email, password, rememberMe })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    me() {\r\n        return axiosInstance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return axiosInstance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    getUserProfileStatus(userId) {\r\n        return axiosInstance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    updateUserProfileStatus(status) {\r\n        return axiosInstance.put(`profile/status/`, { status: status })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import { authAPI } from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = '/redux/auth-reducer/SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    password: null,\r\n    rememberMe: false,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const data = await authAPI.login(email, password, rememberMe)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(getAuthUserDataThunk());\r\n        }\r\n    }\r\n}\r\nexport const logout = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const data = await authAPI.logout()\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAuthUserDataThunk = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const data = await authAPI.me()\r\n\r\n        if (data.resultCode === 0) {\r\n            let { id, email, login } = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../assets/social-network.png';\r\nimport useStyles from './styles';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../Redux/auth-reducer';\r\n\r\nconst NavMenu = ({ isAuth, logout }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <img src={logo} className={classes.image} alt='social-network' />\r\n                    <Typography variant='h6' className={classes.title}>Social-Network</Typography>\r\n                    {isAuth ?\r\n                        <Button color='secondary' variant='contained' className={classes.loginButton} onClick={logout}>Logout</Button>\r\n                        :\r\n                        <Button variant='outlined' color='inherit' className={classes.loginButton} component={Link} to='/login'>Login</Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar />\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        <ListItem button className={classes.sideMenuButton} component={Link} to='/profile'>\r\n                            <ListItemIcon>\r\n                                <PermIdentityIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Profile\" />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" />\r\n                        <ListItem button className={classes.sideMenuButton} component={Link} to='/users'>\r\n                            <ListItemIcon>\r\n                                <PeopleIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Users\" />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" />\r\n                        <ListItem button className={classes.sideMenuButton} component={Link} to='/dialogs'>\r\n                            <ListItemIcon>\r\n                                <ChatIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Dialogs\" />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" />\r\n                        <ListItem button className={classes.sideMenuButton} component={Link} to='/music'>\r\n                            <ListItemIcon>\r\n                                <LibraryMusicIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Music\" />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" />\r\n                        <ListItem button className={classes.sideMenuButton} component={Link} to='/settings'>\r\n                            <ListItemIcon>\r\n                                <SettingsIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Settings\" />\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(NavMenu)","import { profileAPI } from \"../api/api\";\r\n\r\nconst SET_USER_PROFILE = '/redux/profile-reducer/SET_USER_PROFILE';\r\nconst SET_USER_PROFILE_STATUS = '/redux/profile-reducer/SET_USER_PROFILE_STATUS';\r\n\r\nlet initialState = {\r\n    profile: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: null,\r\n        fullName: null,\r\n        userId: null,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        },\r\n    },\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case SET_USER_PROFILE_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\n\r\nexport const setUserProfileStatus = (status) => ({ type: SET_USER_PROFILE_STATUS, status })\r\n\r\n\r\nexport const getUserProfile = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        let data = await profileAPI.getUserProfile(userId)\r\n\r\n        dispatch(setUserProfile(data));\r\n    }\r\n}\r\n\r\nexport const getUserProfileStatus = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        const data = await profileAPI.getUserProfileStatus(userId)\r\n\r\n        dispatch(setUserProfileStatus(data));\r\n    }\r\n}\r\n\r\nexport const updateUserProfileStatus = (status) => {\r\n    debugger;\r\n    return async (dispatch) => {\r\n        const data = await profileAPI.updateUserProfileStatus(status)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserProfileStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    mainPhoto: {\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        width: 1000\r\n    },\r\n\r\n    paperAbout: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10\r\n    }\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst ProfileStatus = ({ userId, status, isOwner, updateUserProfileStatus }) => {\r\n\r\n\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [statusLocal, setStatus] = useState(status);\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        updateUserProfileStatus(statusLocal)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isOwner !== userId &&\r\n                <div>\r\n                    {status}\r\n                </div>\r\n            }\r\n            {isOwner === userId && !editMode &&\r\n                <div>\r\n                    <div onDoubleClickCapture={activateEditMode}>{statusLocal ? statusLocal : '====='}</div>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <TextField defaultValue={statusLocal} color='primary'\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode} autoFocus=\"true\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus\r\n","import { Avatar, Button, Divider, Grid, Link, Typography } from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { pink } from '@material-ui/core/colors';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\nconst ProfileData = ({ profile, isOwner, status, updateUserProfileStatus }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container xs={8} >\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs>\r\n                        {profile.photos.large != null ? <Avatar src={profile.photos.large} className={classes.mainPhoto} variant='square' /> : <Avatar className={classes.mainPhoto} />}\r\n                        <Typography variant='h4' style={{ marginTop: 15 }}>\r\n                            {profile.fullName}\r\n                        </Typography>\r\n                        <ProfileStatus status={status} updateUserProfileStatus={updateUserProfileStatus} isOwner={isOwner} userId={profile.userId} />\r\n                        {isOwner === profile.userId &&\r\n                            <Grid item xs style={{ marginLeft: 22, marginTop: 10 }}>\r\n                                <Button component={RouterLink} to='/editProfile' color='primary' variant='contained' size='small'>Edit Profile</Button>\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                    <Divider orientation=\"vertical\" flexItem variant='middle' />\r\n                    <Grid item xs>\r\n                        <Grid item>\r\n                            <Typography> <FacebookIcon color=\"primary\" /> facebook : <Link>{profile.contacts.facebook != null ? profile.contacts.facebook : 'null'}</Link> </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography> <TwitterIcon color=\"primary\" /> twitter : <Link>{profile.contacts.twitter != null ? profile.contacts.twitter : 'null'} </Link> </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography> <InstagramIcon style={{ color: pink[300] }} /> instagram : <Link>{profile.contacts.instagram != null ? profile.contacts.instagram : 'null'} </Link> </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography> <YouTubeIcon color=\"secondary\" /> youtube : <Link>{profile.contacts.youtube != null ? profile.contacts.youtube : 'null'} </Link> </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography> <GitHubIcon /> github : <Link>{profile.contacts.github != null ? profile.contacts.github : 'null'} </Link> </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper elevation={3} className={classes.paperAbout}>\r\n                        <Typography variant='h4'>\r\n                            about me\r\n                        </Typography>\r\n                        <Typography>\r\n                            {profile.aboutMe}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                    <Paper elevation={3} className={classes.paperAbout}>\r\n                        <Typography variant='h4'>\r\n                            Looking for a job :\r\n                            </Typography>\r\n                        <Typography variant='button'>\r\n                            {profile.lookingForAJob ? 'yes' : 'no'}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                {profile.lookingForAJob && <Grid item xs={6}>\r\n                    <Paper elevation={3} className={classes.paperAbout}>\r\n                        <Typography variant='h4'>My proffesional skills : <Typography>{profile.lookingForAJobDescription} </Typography></Typography>\r\n                    </Paper>\r\n                </Grid>}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n// {\r\n//     \"aboutMe\": \"я круто чувак 1001%\",\r\n//     \"contacts\": {\r\n//         \"facebook\": \"facebook.com\",\r\n//         \"website\": null,\r\n//         \"vk\": \"vk.com/dimych\",\r\n//         \"twitter\": \"https://twitter.com/@sdf\",\r\n//         \"instagram\": \"instagra.com/sds\",\r\n//         \"youtube\": null,\r\n//         \"github\": \"github.com\",\r\n//         \"mainLink\": null\r\n//     },\r\n//     \"lookingForAJob\": true,\r\n//     \"lookingForAJobDescription\": \"не ищу, а дурачусь\",\r\n//     \"fullName\": \"samurai dimych\",\r\n//     \"userId\": 2,\r\n//     \"photos\": {\r\n//         \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n//         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n//     }\r\n// }\r\n\r\nexport default ProfileData;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { updateUserProfileStatus, getUserProfileStatus, getUserProfile } from '../../Redux/profile-reducer';\r\nimport ProfileData from './ProfileInfo/ProfileData';\r\n\r\n\r\nconst Profile = ({ updateUserProfileStatus, getUserProfile, profile, authorizedUserId, isAuth, status, getUserProfileStatus }) => {\r\n\r\n\r\n    let { userId } = useParams();\r\n    if (!userId) {\r\n        userId = authorizedUserId;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            return\r\n        } else {\r\n            getUserProfile(userId)\r\n        }\r\n    }, [userId])\r\n\r\n    useEffect(() => {\r\n        getUserProfileStatus(userId)\r\n    }, [userId])\r\n\r\n\r\n    if (!isAuth && !userId) {\r\n        return <Redirect to='/login' />\r\n    } else if ((!isAuth && userId) || isAuth) {\r\n        return (\r\n            <ProfileData profile={profile} isOwner={authorizedUserId} status={status} updateUserProfileStatus={updateUserProfileStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        authorizedUserId: state.authPage.userId,\r\n        isAuth: state.authPage.isAuth,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateUserProfileStatus, getUserProfileStatus, getUserProfile })(Profile)\r\n","import { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Controller, useFormContext } from 'react-hook-form';\r\n\r\nconst FormInput = ({ name, label, required, type, asProp, color, value }) => {\r\n    const { control } = useFormContext();\r\n\r\n    return (\r\n        <Grid container>\r\n            <Controller\r\n                as={asProp}\r\n                control={control}\r\n                fullWidth\r\n                name={name}\r\n                label={label}\r\n                required={required}\r\n                type={type}\r\n                color={color}\r\n                value={value}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justifyContent: 'center',\r\n        paddingRight: 200\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(12),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button: {\r\n        paddingTop: 20\r\n    }\r\n}));","import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../Redux/auth-reducer';\r\nimport FormInput from './FormInput';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst Login = ({ login, isAuth }) => {\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        login(data.email, data.password, data.rememberMe)\r\n    }\r\n\r\n    const { handleSubmit, ...methods } = useForm();\r\n    const classes = useStyles();\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container xs={6} sm={12} className={classes.root}>\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Typography variant='h6' gutterBottom>Login</Typography>\r\n                        <Grid item>\r\n                            <FormInput asProp={TextField} required name='email' label='Email' />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormInput asProp={TextField} required name='password' label='password' type='password' />\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <FormInput color='primary' asProp='input' type='checkbox' name='rememberMe' label='rememberMe' />\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <Button type=\"submit\" color='primary' variant='contained'>Login</Button>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid >\r\n            </form>\r\n        </FormProvider >\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","export const updateObjInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n}\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjInArray } from \"../Helpers/updateObjectInArray\";\r\n\r\nconst SET_USERS = '/users-reducer/SET_USERS';\r\nconst SET_TOTAL_COUNT = '/users-reducer/SET_TOTAL_COUNT';\r\nconst SET_CURRENT_PAGE = '/users-reducer/SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = '/users-reducer/TOGGLE_IS_FETCHING';\r\nconst FOLLOW = '/users-reducer/FOLLOW';\r\nconst UNFOLLOW = '/users-reducer/UNFOLLOW';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalPages: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, action.userId, 'id', { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, action.userId, 'id', { followed: false })\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state, totalPages: action.totalCount\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\n\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\n\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\n\r\nexport const setTotalCount = (totalCount) => ({ type: SET_TOTAL_COUNT, totalCount })\r\n\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\nexport const togglefollowingInProgress = (followingInProgress, userId) => ({ type: TOGGLE_IS_FETCHING, followingInProgress, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        const data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalCount(data.totalCount))\r\n        dispatch(setCurrentPage(currentPage))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(togglefollowingInProgress(true));\r\n\r\n        const data = await usersAPI.follow(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(togglefollowingInProgress(true));\r\n\r\n        const data = await usersAPI.unfollow(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId))\r\n        }\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import Pagination from '@material-ui/lab/Pagination';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, setCurrentPage } from './../Redux/users-reducer';\r\n\r\nlet Paginator = ({ totalPages, currentPage, pageSize, setCurrentPage }) => {\r\n\r\n    const totalPagesCount = Math.ceil(totalPages / pageSize)\r\n\r\n    const handleChange = (event, pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n    };\r\n\r\n    return (<div>\r\n        <Pagination color='primary' count={totalPagesCount} page={currentPage} onChange={handleChange} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { setCurrentPage, getUsers })(Paginator);","import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{ minHeight: \"100vh\" }}>\r\n            <CircularProgress size='40px' />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 10,\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  large: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n\r\n  items: {\r\n    margin: 20\r\n  },\r\n\r\n  followButton: {\r\n    textAlign: 'right',\r\n  },\r\n\r\n  userLink: {\r\n    textDecoration: 'none',\r\n  },\r\n}));","import { Avatar, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyles from './styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst User = ({ users, follow, unfollow, followingInProgress }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid container spacing={2} className={classes.root}>\r\n                {users.map(u =>\r\n                    <Grid item key={u.id} sm={5} xs={3}>\r\n                        <Paper elevation={2} className={classes.paper}>\r\n                            <Grid item spacing={5} className={classes.items}>\r\n                                <Grid item xs={2}>{u.photos.small != null ?\r\n                                    <Avatar src={u.photos.small} alt='avatar' className={classes.large} component={Link} to={'/profile/' + u.id} />\r\n                                    : <Avatar className={classes.large} component={Link} to={'/profile/' + u.id} />\r\n\r\n                                }</Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='h6'\r\n                                        component={Link} to={'/profile/' + u.id}\r\n                                        className={classes.userLink}\r\n                                        color='primary'> {u.name}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant='body2' color='textSecondary'>{u.status}</Typography>\r\n                                </Grid>\r\n                                <Grid item className={classes.followButton}>\r\n                                    {u.followed ?\r\n                                        <Button disabled={followingInProgress.some(id => id === u.id)}\r\n                                            variant=\"outlined\"\r\n                                            color='secondary'\r\n                                            endIcon={<RemoveIcon />}\r\n                                            size=\"small\"\r\n                                            onClick={() => unfollow(u.id)}>UnFollow</Button>\r\n                                        :\r\n                                        <Button disabled={followingInProgress.some(id => id === u.id)}\r\n                                            variant=\"contained\"\r\n                                            color='primary'\r\n                                            endIcon={<AddIcon />}\r\n                                            size=\"small\"\r\n                                            onClick={() => follow(u.id)}>Follow</Button>\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>)}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default User\r\n","import { Grid } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Paginator from '../../Paginator/Paginator';\r\nimport Loader from './../../Common/Preloader/Loader';\r\nimport { follow, getUsers, unfollow } from './../../Redux/users-reducer';\r\nimport User from './User/User';\r\n\r\n\r\nconst Users = (props) => {\r\n    // const [users, setUsersState] = useState([props.users]);\r\n    // const [follow, followUnfollow] = useState([props.users.follow])\r\n    useEffect(() => {\r\n        props.getUsers(props.currentPage, props.pageSize)\r\n    }, [props.currentPage, props.pageSize])\r\n\r\n    // useEffect(() => {\r\n    //     setUsersState(props.users)\r\n    // }, [props.users]);\r\n\r\n    return (\r\n        <>\r\n            {props.isFetching ? <Loader /> :\r\n                <Grid>\r\n                    <Grid container xs={12}>\r\n                        <Paginator totalPages={props.totalPages}\r\n                            currentPage={props.currentPage}\r\n                            pageSize={props.pageSize}\r\n                        />\r\n                    </Grid>\r\n                    <Grid >\r\n                        <User users={props.users}\r\n                            follow={props.follow}\r\n                            unfollow={props.unfollow}\r\n                            followingInProgress={props.followingInProgress} />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalPages: state.usersPage.totalPages,\r\n        currentPage: state.usersPage.currentPage,\r\n        pageSize: state.usersPage.pageSize,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getUsers, follow, unfollow })(Users)\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    mainPhoto: {\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        width: 1000\r\n    },\r\n\r\n    paperAbout: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10\r\n    }\r\n}));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile } from '../../../../Redux/profile-reducer';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport FormInput from '../../../Login/FormInput';\r\nimport { Button, Grid, Paper, Typography, TextField } from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\nconst ProfileDataForm = ({ getUserProfile, profile, authorizedUserId, isAuth }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleSubmit, ...methods } = useForm();\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    }\r\n\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container xs={6} sm={12} className={classes.root}>\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Typography variant='h6' gutterBottom>Login</Typography>\r\n                        <Grid item>\r\n                            <FormInput asProp={TextField} required name='email' label='Email' />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormInput asProp={TextField} required name='password' label='password' type='password' />\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <FormInput color='primary' asProp='input' type='checkbox' name='rememberMe' label='rememberMe' />\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <Button type=\"submit\" color='primary' variant='contained'>Login</Button>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid >\r\n            </form>\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        authorizedUserId: state.authPage.userId,\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getUserProfile })(ProfileDataForm)\r\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Login, Profile, Users, ProfileDataForm } from './Components';\nimport NavMenu from './Components/NavMenu/NavMenu';\n\nconst App = () => {\n  return (\n    <>\n      <NavMenu />\n      <Switch>\n        <div className='content'>\n          <Route exact path='/profile/:userId?' component={Profile} />\n          <Route exact path='/users' component={Users} />\n          {/* <Route exact path='/dialogs/' render={() => < Dialogs />} />\n          <Route exact path='/music/' render={() => < Music />} />\n          <Route exact path='/settings/' render={() => < Settings />} /> */}\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/editProfile' component={ProfileDataForm} />\n        </div>\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from './auth-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport usersReducer from './users-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    usersPage: usersReducer,\r\n    profilePage: profileReducer,\r\n    authPage: authReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/redux-store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}